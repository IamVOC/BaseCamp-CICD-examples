name: Poetry CI/CD

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    services:      
      postgres:
        image: postgres:16.3-alpine3.20
        env:
          POSTGRES_PASSWORD: ${{ vars.DB_PASS }}
          POSTGRES_USER: ${{ vars.DB_USER }}
          POSTGRES_DB: ${{ vars.DB_NAME }}
        ports:
          - 5432:5432

    steps:
      - name: Clone project
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.8.3
      - name: Install deps
        run: poetry install
      - name: Ruff check
        run: poetry run ruff check --config pyproject.toml
      - name: Test project
        run: poetry run pytest --cov=src .
      - name: Build Docker image
        run: docker build -t ${{ vars.DOCKER_USERNAME }}/poetry-app:latest . # Заменить на свой

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push Docker image
        run: docker push ${{ vars.DOCKER_USERNAME }}/poetry-app:latest # Заменить на свой
